// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates a narrative summary of a completed scan.
 *
 * - getScanSummary - A function that takes a full scan object and returns a summary.
 * - GetScanSummaryInput - The input type for the getScanSummary function.
 * - GetScanSummaryOutput - The return type for the getScanSummary function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GetScanSummaryInputSchema = z.object({
  scanDetails: z.string().describe('The full JSON object of the completed scan, including all vulnerabilities.'),
});

export type GetScanSummaryInput = z.infer<typeof GetScanSummaryInputSchema>;

const GetScanSummaryOutputSchema = z.object({
  summary: z.string().describe('An executive-level summary of the scan results.'),
});

export type GetScanSummaryOutput = z.infer<typeof GetScanSummaryOutputSchema>;

export async function getScanSummary(input: GetScanSummaryInput): Promise<GetScanSummaryOutput> {
  return getScanSummaryFlow(input);
}

const prompt = ai.definePrompt({
  name: 'getScanSummaryPrompt',
  input: {schema: GetScanSummaryInputSchema},
  output: {schema: GetScanSummaryOutputSchema},
  prompt: `You are a security analyst. Your task is to provide a concise, executive-level summary of the provided vulnerability scan results.

  **Scan Details (JSON):**
  {{{scanDetails}}}

  **Instructions:**
  1.  Briefly state the overall security posture based on the findings.
  2.  Highlight the most critical vulnerability found, if any.
  3.  Mention the total number of vulnerabilities.
  4.  Keep the summary to 2-3 sentences.
  `,
});

const getScanSummaryFlow = ai.defineFlow(
  {
    name: 'getScanSummaryFlow',
    inputSchema: GetScanSummaryInputSchema,
    outputSchema: GetScanSummaryOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
