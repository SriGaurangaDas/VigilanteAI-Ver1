// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Explains a specific vulnerability in more detail using AI.
 *
 * - explainVulnerability - A function that takes vulnerability details and returns an AI explanation.
 * - ExplainVulnerabilityInput - The input type for the explainVulnerability function.
 * - ExplainVulnerabilityOutput - The return type for the explainVulnerability function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const ExplainVulnerabilityInputSchema = z.object({
  vulnerabilityDetails: z.string().describe('Detailed information about the vulnerability.'),
});

export type ExplainVulnerabilityInput = z.infer<typeof ExplainVulnerabilityInputSchema>;

const ExplainVulnerabilityOutputSchema = z.object({
  explanation: z.string().describe('A detailed explanation of the vulnerability and its potential impact, formatted in Markdown.'),
  remediation: z.string().describe('Suggested steps to remediate the vulnerability, formatted in Markdown.'),
});

export type ExplainVulnerabilityOutput = z.infer<typeof ExplainVulnerabilityOutputSchema>;

export async function explainVulnerability(input: ExplainVulnerabilityInput): Promise<ExplainVulnerabilityOutput> {
  return explainVulnerabilityFlow(input);
}

const prompt = ai.definePrompt({
  name: 'explainVulnerabilityPrompt',
  input: {schema: ExplainVulnerabilityInputSchema},
  output: {schema: ExplainVulnerabilityOutputSchema},
  prompt: `You are a security expert explaining a vulnerability.
\n  Provide a detailed explanation of the vulnerability, its potential impact, and suggested steps to remediate it.
\n  Vulnerability Details: {{{vulnerabilityDetails}}}
\n  Format your response in Markdown for clarity, using headings, lists, and code blocks where appropriate.
  `,
});

const explainVulnerabilityFlow = ai.defineFlow(
  {
    name: 'explainVulnerabilityFlow',
    inputSchema: ExplainVulnerabilityInputSchema,
    outputSchema: ExplainVulnerabilityOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
