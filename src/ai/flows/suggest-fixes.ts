'use server';
/**
 * @fileOverview This file defines a Genkit flow for suggesting fixes for a given vulnerability using AI.
 *
 * - suggestFixes - A function that takes vulnerability details as input and returns AI-suggested fixes.
 * - SuggestFixesInput - The input type for the suggestFixes function.
 * - SuggestFixesOutput - The return type for the suggestFixes function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SuggestFixesInputSchema = z.object({
  vulnerabilityDescription: z
    .string()
    .describe('A detailed description of the vulnerability.'),
  scanOutput: z.string().describe('The raw output from the vulnerability scan.'),
});
export type SuggestFixesInput = z.infer<typeof SuggestFixesInputSchema>;

const SuggestFixesOutputSchema = z.object({
  suggestedFixes: z
    .string()
    .describe(
      'A list of suggested fixes for the vulnerability, generated by the AI.'
    ),
});
export type SuggestFixesOutput = z.infer<typeof SuggestFixesOutputSchema>;

export async function suggestFixes(input: SuggestFixesInput): Promise<SuggestFixesOutput> {
  return suggestFixesFlow(input);
}

const prompt = ai.definePrompt({
  name: 'suggestFixesPrompt',
  input: {schema: SuggestFixesInputSchema},
  output: {schema: SuggestFixesOutputSchema},
  prompt: `You are an AI-powered security assistant. You will be provided with a description of a vulnerability and the raw output from a security scan.

  Your task is to analyze the information and suggest potential fixes for the vulnerability. Provide clear and actionable steps that a developer can take to address the issue.

Vulnerability Description: {{{vulnerabilityDescription}}}
Scan Output: {{{scanOutput}}}

Suggested Fixes:`,
});

const suggestFixesFlow = ai.defineFlow(
  {
    name: 'suggestFixesFlow',
    inputSchema: SuggestFixesInputSchema,
    outputSchema: SuggestFixesOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
